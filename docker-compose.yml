version: "3.7"

services:
    # image project
    app:
        container_name: ${APP_NAME}_app
        build:
            context: .
            dockerfile: Dockerfile
        image: bitnami/laravel
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on:
            - redis
        networks:
            - teste_network

    # nginx
    nginx:
        container_name: ${APP_NAME}_serve
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - teste_network

    # db postgres
    postgres:
        container_name: ${APP_NAME}_db
        image: postgres:latest
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: "trust"
        volumes:
            - ./.docker/postgres:/var/lib/postgresql/data
        ports:
            - "5432:5432"
        networks:
            - teste_network
    #npm
    npm:
        container_name: ${APP_NAME}_npm
        image: node:current-alpine
        environment:
            - NODE_OPTIONS=--openssl-legacy-provider
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        entrypoint: ['npm']
        networks:
             - teste_network

    # redis
    redis:
        container_name: ${APP_NAME}_redis
        image: redis:latest
        networks:
            - teste_network

networks:
    teste_network:
        driver: bridge
